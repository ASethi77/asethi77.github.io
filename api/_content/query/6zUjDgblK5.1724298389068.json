{"_path":"/blog/stop_being_special","_dir":"blog","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Stop trying to be special","description":"For fuck's sake C++ people, pick a thing","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Guys. Please pick a fucking build system."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'm talking to you Google, who has inextricably forced fucking Java-based\nbuildsystems into the world of C++.\nAnd you Meson, who has decided every option sucks (which they do) and\nis fighting to move the world away from CMake in the same way a diver\nmay flap his scuba fins to push back against a tidal wave."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"And I'm especially talking to you, Espressif, who emerged with the ESP8266\nRTOS SDK and decided the best thing to do in the face of multiple competing\nstandards was to pick literally all of them."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CMake, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"and"}]},{"type":"text","value":" make, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"and"}]},{"type":"text","value":" ninja, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"and"}]},{"type":"text","value":" Python? And CMake runs twice so it\nbreaks every IDE in existence? Oh, and your makefiles and python scripts\nare buggy so your tools don't invoke each other correctly? Sometimes\ngetting all this bullshit to work together makes me want to smash my laptop\nscreen and eat the glass."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Whether you like it or not, the C++ development world is converging on two\nthings:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The usage of CMake, such that I can get a reproducible build from running\na configure step, then a build step; OR"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The generation of a compile_commands.json with your tooling if you\ndon't do #1."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If your project's toolchain doesn't achieve either of these things,\nthen you don't have a toolchain. You have a pile of garbage and I'd\nencourage you to torch it. You need a specific compiler? Fine. You need\nto generate Visual Studio projects instead of using Ninja? Fine.\nBut stop enacting your grand vision to replace all of the world's\nmodern development tooling with a terminal and your broken-ass scripts."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Just let me load your shit into an IDE."}]}]},{"type":"element","tag":"h2","props":{"id":"what-to-do-when-a-project-is-special"},"children":[{"type":"text","value":"What to do when a project is special"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'm mostly familiar with generating compile_commands.json "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"with"}]},{"type":"text","value":"\nCMake to be as friendly as possible to all possible tools.\nIf, however, you're trying to wrangle a project that does use a\nspecial snowflake of a build system, you're not entirely out of luck\nwith generating said file."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/rizsotto/Bear","rel":["nofollow"]},"children":[{"type":"text","value":"Bear"}]},{"type":"text","value":" is an excellent clang-based project\nto generate compile_commands.json files by intercepting whatever build system\nyou have in place. So in the case of the ESP8266, I couldn't get\nthe CMakeLists.txt to play nicely with CLion since their SDK mostly\nuses "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"make"}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"python idf.py <some stuff>"}]},{"type":"text","value":", but at least I could\nrun "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"bear -- make"}]},{"type":"text","value":" and get a file I could actually load into an IDE for\nreal autocompletion. Thank Jesus for you Mr. rizsotto."}]}]},"date":"2024-04-26T00:00:00.000Z","tags":["Software"],"canonical_url":false,"published":true,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Guys. Please pick a fucking build system."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'm talking to you Google, who has inextricably forced fucking Java-based\nbuildsystems into the world of C++.\nAnd you Meson, who has decided every option sucks (which they do) and\nis fighting to move the world away from CMake in the same way a diver\nmay flap his scuba fins to push back against a tidal wave."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"And I'm especially talking to you, Espressif, who emerged with the ESP8266\nRTOS SDK and decided the best thing to do in the face of multiple competing\nstandards was to pick literally all of them."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CMake, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"and"}]},{"type":"text","value":" make, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"and"}]},{"type":"text","value":" ninja, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"and"}]},{"type":"text","value":" Python? And CMake runs twice so it\nbreaks every IDE in existence? Oh, and your makefiles and python scripts\nare buggy so your tools don't invoke each other correctly? Sometimes\ngetting all this bullshit to work together makes me want to smash my laptop\nscreen and eat the glass."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Whether you like it or not, the C++ development world is converging on two\nthings:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The usage of CMake, such that I can get a reproducible build from running\na configure step, then a build step; OR"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The generation of a compile_commands.json with your tooling if you\ndon't do #1."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If your project's toolchain doesn't achieve either of these things,\nthen you don't have a toolchain. You have a pile of garbage and I'd\nencourage you to torch it. You need a specific compiler? Fine. You need\nto generate Visual Studio projects instead of using Ninja? Fine.\nBut stop enacting your grand vision to replace all of the world's\nmodern development tooling with a terminal and your broken-ass scripts."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Just let me load your shit into an IDE."}]}]},{"type":"element","tag":"h2","props":{"id":"what-to-do-when-a-project-is-special"},"children":[{"type":"text","value":"What to do when a project is special"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'm mostly familiar with generating compile_commands.json "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"with"}]},{"type":"text","value":"\nCMake to be as friendly as possible to all possible tools.\nIf, however, you're trying to wrangle a project that does use a\nspecial snowflake of a build system, you're not entirely out of luck\nwith generating said file."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/rizsotto/Bear","rel":["nofollow"]},"children":[{"type":"text","value":"Bear"}]},{"type":"text","value":" is an excellent clang-based project\nto generate compile_commands.json files by intercepting whatever build system\nyou have in place. So in the case of the ESP8266, I couldn't get\nthe CMakeLists.txt to play nicely with CLion since their SDK mostly\nuses "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"make"}]},{"type":"text","value":" or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"python idf.py <some stuff>"}]},{"type":"text","value":", but at least I could\nrun "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"bear -- make"}]},{"type":"text","value":" and get a file I could actually load into an IDE for\nreal autocompletion. Thank Jesus for you Mr. rizsotto."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"what-to-do-when-a-project-is-special","depth":2,"text":"What to do when a project is special"}]}},"_type":"markdown","_id":"content:blog:stop_being_special.md","_source":"content","_file":"blog/stop_being_special.md","_extension":"md"}